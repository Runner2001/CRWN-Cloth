{"ast":null,"code":"var _jsxFileName = \"/home/runner/Desktop/react-tuto/client/src/pages/shop/shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionOver from \"../../components/collection-overview/collection-overview.com\";\nimport LoadingCom from \"../../components/Loading/Loading.com\";\nimport { fetchingStart } from \"../../redux/shop/shop.action\";\nimport { LoadingSelector, selectIsCollectionLoaded } from \"../../redux/shop/shop.selector\";\nimport Catagories from \"../catagories/catagories.com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverViewWithLoading = LoadingCom(CollectionOver);\n_c = CollectionOverViewWithLoading;\nconst CatagoriesWithLoading = LoadingCom(Catagories);\n_c2 = CatagoriesWithLoading;\n\nconst ShopPage = _ref => {\n  _s();\n\n  let {\n    match,\n    isLoading,\n    isCollectionsLoaded,\n    fetchingStart\n  } = _ref;\n  useEffect(() => {\n    fetchingStart();\n  }, [fetchingStart]); // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromFirebase = null;\n  // componentDidMount() {\n  // const { updateCollections } = this.props;\n  // //Collection Ref of FireStore.\n  // const collectionsRef = collection(firestore, \"collections\");\n  // // Observer Pattern\n  // // onSnapshot(collectionsRef, async (snapshot) => {\n  // //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  // //   updateCollections(collectionMap);\n  // //   this.setState({ loading: false });\n  // // });\n  // // Promise Pattern\n  // getDocs(collectionsRef).then((snapshot) => {\n  //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //   updateCollections(collectionMap);\n  //   this.setState({ loading: false });\n  // });\n  // Up Phase Change to async Redux Api request\n  //   const { fetchingStart } = this.props;\n  //   fetchingStart();\n  // }\n  //Match is the auto props of React Router.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: match.path,\n      render: props => /*#__PURE__*/_jsxDEV(CollectionOverViewWithLoading, {\n        isLoading: isLoading,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:cataID`,\n      render: props => /*#__PURE__*/_jsxDEV(CatagoriesWithLoading, {\n        isLoading: !isCollectionsLoaded,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = ShopPage;\nconst mapStateToProps = createStructuredSelector({\n  isLoading: LoadingSelector,\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchingStart: () => dispatch(fetchingStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CollectionOverViewWithLoading\");\n$RefreshReg$(_c2, \"CatagoriesWithLoading\");\n$RefreshReg$(_c3, \"ShopPage\");","map":{"version":3,"names":["React","useEffect","connect","Route","createStructuredSelector","CollectionOver","LoadingCom","fetchingStart","LoadingSelector","selectIsCollectionLoaded","Catagories","CollectionOverViewWithLoading","CatagoriesWithLoading","ShopPage","match","isLoading","isCollectionsLoaded","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"sources":["/home/runner/Desktop/react-tuto/client/src/pages/shop/shop.component.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionOver from \"../../components/collection-overview/collection-overview.com\";\nimport LoadingCom from \"../../components/Loading/Loading.com\";\nimport { fetchingStart } from \"../../redux/shop/shop.action\";\nimport {\n  LoadingSelector,\n  selectIsCollectionLoaded,\n} from \"../../redux/shop/shop.selector\";\nimport Catagories from \"../catagories/catagories.com\";\n\nconst CollectionOverViewWithLoading = LoadingCom(CollectionOver);\nconst CatagoriesWithLoading = LoadingCom(Catagories);\n\nconst ShopPage = ({ match, isLoading, isCollectionsLoaded, fetchingStart }) => {\n  useEffect(() => {\n    fetchingStart();\n  }, [fetchingStart]);\n\n  // state = {\n  //   loading: true,\n  // };\n\n  // unsubscribeFromFirebase = null;\n\n  // componentDidMount() {\n  // const { updateCollections } = this.props;\n  // //Collection Ref of FireStore.\n  // const collectionsRef = collection(firestore, \"collections\");\n  // // Observer Pattern\n  // // onSnapshot(collectionsRef, async (snapshot) => {\n  // //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  // //   updateCollections(collectionMap);\n  // //   this.setState({ loading: false });\n  // // });\n  // // Promise Pattern\n  // getDocs(collectionsRef).then((snapshot) => {\n  //   const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //   updateCollections(collectionMap);\n  //   this.setState({ loading: false });\n  // });\n  // Up Phase Change to async Redux Api request\n\n  //   const { fetchingStart } = this.props;\n  //   fetchingStart();\n  // }\n  //Match is the auto props of React Router.\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={match.path}\n        render={(props) => (\n          <CollectionOverViewWithLoading isLoading={isLoading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:cataID`}\n        render={(props) => (\n          <CatagoriesWithLoading isLoading={!isCollectionsLoaded} {...props} />\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: LoadingSelector,\n  isCollectionsLoaded: selectIsCollectionLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchingStart: () => dispatch(fetchingStart()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SACEC,eADF,EAEEC,wBAFF,QAGO,gCAHP;AAIA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,6BAA6B,GAAGL,UAAU,CAACD,cAAD,CAAhD;KAAMM,6B;AACN,MAAMC,qBAAqB,GAAGN,UAAU,CAACI,UAAD,CAAxC;MAAME,qB;;AAEN,MAAMC,QAAQ,GAAG,QAA8D;EAAA;;EAAA,IAA7D;IAAEC,KAAF;IAASC,SAAT;IAAoBC,mBAApB;IAAyCT;EAAzC,CAA6D;EAC7EN,SAAS,CAAC,MAAM;IACdM,aAAa;EACd,CAFQ,EAEN,CAACA,aAAD,CAFM,CAAT,CAD6E,CAK7E;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,KAAD;MACE,KAAK,MADP;MAEE,IAAI,EAAEO,KAAK,CAACG,IAFd;MAGE,MAAM,EAAGC,KAAD,iBACN,QAAC,6BAAD;QAA+B,SAAS,EAAEH,SAA1C;QAAA,GAAyDG;MAAzD;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,KAAD;MACE,IAAI,EAAG,GAAEJ,KAAK,CAACG,IAAK,UADtB;MAEE,MAAM,EAAGC,KAAD,iBACN,QAAC,qBAAD;QAAuB,SAAS,EAAE,CAACF,mBAAnC;QAAA,GAA4DE;MAA5D;QAAA;QAAA;QAAA;MAAA;IAHJ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAnDD;;GAAML,Q;;MAAAA,Q;AAqDN,MAAMM,eAAe,GAAGf,wBAAwB,CAAC;EAC/CW,SAAS,EAAEP,eADoC;EAE/CQ,mBAAmB,EAAEP;AAF0B,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;EACxCd,aAAa,EAAE,MAAMc,QAAQ,CAACd,aAAa,EAAd;AADW,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf"},"metadata":{},"sourceType":"module"}