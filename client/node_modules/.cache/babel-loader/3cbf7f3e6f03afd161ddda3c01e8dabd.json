{"ast":null,"code":"import { collection, getDocs } from \"firebase/firestore\";\nimport { convertCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { shopActionType } from \"./shop.type\";\nexport const fetchingStart = () => ({\n  type: shopActionType.FATCH_DATA_START\n});\nexport const fetchingSuccess = data => ({\n  type: shopActionType.FATCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchingFail = data => ({\n  type: shopActionType.FATCH_DATA_FAIL,\n  payload: data\n});\nexport const FetchingData = () => {\n  return dispatch => {\n    //Collection Ref\n    const collectionsRef = collection(firestore, \"collections\");\n    dispatch(fetchingStart()); //Getting Data from that ref\n\n    getDocs(collectionsRef).then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchingSuccess(collectionMap));\n    }).catch(error => {\n      dispatch(fetchingFail(error.message));\n    });\n  };\n};\n_c = FetchingData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchingData\");","map":{"version":3,"names":["collection","getDocs","convertCollectionSnapshotToMap","firestore","shopActionType","fetchingStart","type","FATCH_DATA_START","fetchingSuccess","data","FATCH_DATA_SUCCESS","payload","fetchingFail","FATCH_DATA_FAIL","FetchingData","dispatch","collectionsRef","then","snapshot","collectionMap","catch","error","message"],"sources":["/home/runner/Desktop/react-tuto/client/src/redux/shop/shop.action.js"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\nimport { convertCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { shopActionType } from \"./shop.type\";\n\nexport const fetchingStart = () => ({\n    type: shopActionType.FATCH_DATA_START,\n})\n\nexport const fetchingSuccess = data => ({\n    type: shopActionType.FATCH_DATA_SUCCESS,\n    payload: data\n})\n\nexport const fetchingFail = data => ({\n    type: shopActionType.FATCH_DATA_FAIL,\n    payload: data\n})\n\nexport const FetchingData = () => {\n    return (dispatch) => {\n\n        //Collection Ref\n        const collectionsRef = collection(firestore, \"collections\");\n        dispatch(fetchingStart());\n\n        //Getting Data from that ref\n        getDocs(collectionsRef)\n            .then((snapshot) => {\n                const collectionMap = convertCollectionSnapshotToMap(snapshot);\n                dispatch(fetchingSuccess(collectionMap));\n            })\n            .catch(error => {\n                dispatch(fetchingFail(error.message))\n            });\n\n    }\n}"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,8BAAT,EAAyCC,SAAzC,QAA0D,+BAA1D;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,OAAO;EAChCC,IAAI,EAAEF,cAAc,CAACG;AADW,CAAP,CAAtB;AAIP,OAAO,MAAMC,eAAe,GAAGC,IAAI,KAAK;EACpCH,IAAI,EAAEF,cAAc,CAACM,kBADe;EAEpCC,OAAO,EAAEF;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAMG,YAAY,GAAGH,IAAI,KAAK;EACjCH,IAAI,EAAEF,cAAc,CAACS,eADY;EAEjCF,OAAO,EAAEF;AAFwB,CAAL,CAAzB;AAKP,OAAO,MAAMK,YAAY,GAAG,MAAM;EAC9B,OAAQC,QAAD,IAAc;IAEjB;IACA,MAAMC,cAAc,GAAGhB,UAAU,CAACG,SAAD,EAAY,aAAZ,CAAjC;IACAY,QAAQ,CAACV,aAAa,EAAd,CAAR,CAJiB,CAMjB;;IACAJ,OAAO,CAACe,cAAD,CAAP,CACKC,IADL,CACWC,QAAD,IAAc;MAChB,MAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;MACAH,QAAQ,CAACP,eAAe,CAACW,aAAD,CAAhB,CAAR;IACH,CAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;MACZN,QAAQ,CAACH,YAAY,CAACS,KAAK,CAACC,OAAP,CAAb,CAAR;IACH,CAPL;EASH,CAhBD;AAiBH,CAlBM;KAAMR,Y"},"metadata":{},"sourceType":"module"}