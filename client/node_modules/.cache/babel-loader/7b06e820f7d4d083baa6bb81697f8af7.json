{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { collection, doc, getDoc, getFirestore, setDoc, writeBatch } from 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyAawT2hsogo_hIQPKXATMOt9rD8ha-vnng\",\n  authDomain: \"shopify-94d2b.firebaseapp.com\",\n  projectId: \"shopify-94d2b\",\n  storageBucket: \"shopify-94d2b.appspot.com\",\n  messagingSenderId: \"462804900112\",\n  appId: \"1:462804900112:web:8bf2dbea119739592c2d95\"\n};\nconst app = initializeApp(config); //initialize\n\nexport const auth = getAuth(app);\nexport const firestore = getFirestore(app); //UserRef of Firestore\n\nconst collectionRef = collection(firestore, 'users');\nexport const createUserProfileDocument = async (userAuth, additionData) => {\n  if (!userAuth) return;\n  const userRef = doc(collectionRef, userAuth.uid);\n  const snapshot = await getDoc(userRef); // console.log(snapshot.exists());\n\n  if (!snapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createAt,\n        ...additionData\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return userRef;\n}; //Adding Shop data to FireStore \n\nexport const addCollectionAndDoc = async (collectionKey, collectionArray) => {\n  const collectionRef = collection(firestore, collectionKey);\n  const batch = writeBatch(firestore);\n  collectionArray.forEach(obj => {\n    const newDocRef = doc(collectionRef); //setDoc(newDocRef, obj)\n\n    batch.setDoc(newDocRef, obj); // console.log(newDocRef);\n  });\n  return await batch.commit();\n}; // Get Firestore data for redux\n\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  }); // console.log(transformedCollections)\n\n  return transformedCollections.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n}; //Authentiation\n\nexport const googleProvider = new GoogleAuthProvider(); // provider.setCustomParameters({ prompt: 'select account' });\n\ngoogleProvider.setCustomParameters({\n  'login_hint': 'user@example.com'\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, googleProvider);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","collection","doc","getDoc","getFirestore","setDoc","writeBatch","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","firestore","collectionRef","createUserProfileDocument","userAuth","additionData","userRef","uid","snapshot","exists","displayName","email","createAt","Date","error","console","log","message","addCollectionAndDoc","collectionKey","collectionArray","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","googleProvider","setCustomParameters","signInWithGoogle","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged"],"sources":["/home/runner/Desktop/react-tuto/client/src/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { collection, doc, getDoc, getFirestore, setDoc, writeBatch } from 'firebase/firestore'\n\nconst config = {\n\n    apiKey: \"AIzaSyAawT2hsogo_hIQPKXATMOt9rD8ha-vnng\",\n\n    authDomain: \"shopify-94d2b.firebaseapp.com\",\n\n    projectId: \"shopify-94d2b\",\n\n    storageBucket: \"shopify-94d2b.appspot.com\",\n\n    messagingSenderId: \"462804900112\",\n\n    appId: \"1:462804900112:web:8bf2dbea119739592c2d95\"\n\n};\n\nconst app = initializeApp(config);\n\n//initialize\nexport const auth = getAuth(app);\nexport const firestore = getFirestore(app);\n\n//UserRef of Firestore\nconst collectionRef = collection(firestore, 'users');\n\nexport const createUserProfileDocument = async (userAuth, additionData) => {\n    if (!userAuth) return;\n\n    const userRef = doc(collectionRef, userAuth.uid)\n    const snapshot = await getDoc(userRef);\n    // console.log(snapshot.exists());\n\n    if (!snapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createAt = new Date();\n\n        try {\n            await setDoc(userRef, {\n                displayName,\n                email,\n                createAt,\n                ...additionData\n            })\n        }\n        catch (error) {\n            console.log(error.message);\n        }\n    }\n    return userRef;\n}\n\n//Adding Shop data to FireStore \nexport const addCollectionAndDoc = async (collectionKey, collectionArray) => {\n    const collectionRef = collection(firestore, collectionKey);\n\n    const batch = writeBatch(firestore);\n    collectionArray.forEach(obj => {\n        const newDocRef = doc(collectionRef);\n        //setDoc(newDocRef, obj)\n        batch.setDoc(newDocRef, obj)\n        // console.log(newDocRef);\n    });\n\n    return await batch.commit();\n}\n\n// Get Firestore data for redux\nexport const convertCollectionSnapshotToMap = (collections) => {\n    const transformedCollections = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    });\n    // console.log(transformedCollections)\n    return transformedCollections.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n\n        return accumulator\n    }, {})\n}\n\n\n//Authentiation\nexport const googleProvider = new GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select account' });\ngoogleProvider.setCustomParameters({\n    'login_hint': 'user@example.com'\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, googleProvider);\n\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth)\n        }, reject)\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}